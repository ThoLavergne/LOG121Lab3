@startuml

title __CONTROLLER's Class Diagram__\n

  namespace controller {
    class controller.CommandManager {
        {static} - mngr : CommandManager
        - redoCommands : ArrayList
        - undoCommands : ArrayList
        + addToRedo()
        + addToUndo()
        {static} + getInstance()
        + getRedoLenght()
        + getUndoLenght()
        + isRedoEmpty()
        + isUndoEmpty()
        + removeFromRedo()
        + removeFromUndo()
        - CommandManager()
    }
  }
  

  namespace controller {
    class controller.DeserializeCommand {
        + execute()
    }
  }
  

  namespace controller {
    abstract class controller.IPPCommand {
        + actionPerformed()
        {abstract} + execute()
    }
  }
  

  namespace controller {
    abstract class controller.ImageCommand {
        {abstract} + execute()
    }
  }
  

  namespace controller {
    class controller.LoadCommand {
        + execute()
    }
  }
  

  namespace controller {
    abstract class controller.PerspectiveCommand {
        + PerspectiveCommand()
        {abstract} + actionPerformed()
        + execute()
        {abstract} + executeAction()
        + redo()
        + undo()
    }
  }
  

  namespace controller {
    class controller.RedoCommand {
        + actionPerformed()
    }
  }
  

  namespace controller {
    class controller.SerializeCommand {
        + execute()
    }
  }
  

  namespace controller {
    abstract class controller.TranslateCommand {
        # incrementTranslation : int
        {static} - INCREMENT_TRANSLATION : int
        + TranslateCommand()
        {abstract} + actionPerformed()
        {abstract} + executeAction()
    }
  }
  

  namespace controller {
    class controller.TranslateFreeCommand {
        ~ x : int
        ~ y : int
        + TranslateFreeCommand()
        + actionPerformed()
        + executeAction()
    }
  }
  

  namespace controller {
    class controller.UndoCommand {
        + actionPerformed()
    }
  }
  

  namespace controller {
    abstract class controller.ZoomCommand {
        # incrementZoom : double
        {static} - INCREMENT_ZOOM : double
        + ZoomCommand()
        {abstract} + actionPerformed()
        {abstract} + executeAction()
    }
  }
  

  namespace controller {
    class controller.ZoomInCommand {
        + ZoomInCommand()
        + actionPerformed()
        + executeAction()
    }
  }
  

  namespace controller {
    class controller.ZoomOutCommand {
        + ZoomOutCommand()
        + actionPerformed()
        + executeAction()
    }
  }
  

  controller.DeserializeCommand -up-|> controller.IPPCommand
  controller.IPPCommand -up-|> javax.swing.AbstractAction
  controller.LoadCommand -up-|> controller.ImageCommand
  controller.PerspectiveCommand -up-|> javax.swing.AbstractAction
  controller.PerspectiveCommand o-- modele.Perspective : p
  controller.PerspectiveCommand o-- memento.Memento : redoMemento
  controller.PerspectiveCommand o-- memento.Memento : undoMemento
  controller.RedoCommand -up-|> javax.swing.AbstractAction
  controller.SerializeCommand -up-|> controller.IPPCommand
  controller.TranslateCommand -up-|> controller.PerspectiveCommand
  controller.TranslateFreeCommand -up-|> controller.TranslateCommand
  controller.UndoCommand -up-|> javax.swing.AbstractAction
  controller.ZoomCommand -up-|> controller.PerspectiveCommand
  controller.ZoomInCommand -up-|> controller.ZoomCommand
  controller.ZoomOutCommand -up-|> controller.ZoomCommand


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
